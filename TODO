#!/bin/cat
# TODOs are not inorder but are randomly noted 
#   -> prorities may be assigned
#   -> categories are not strictly assigned but at first glimpse
#
# (road to release) - see below for details
#   - android certificate & release build
#   - tutorial or game mode specific intro section
#   - complete translations
#   - [PROGRESS] utf8 / iso8859-1
#           => text font merged to ttf
#           => grid pending
#   - naming / logo
#   - (at least strategy) revenue system (ads, install-fee, whatever)
#   - [DONE] scaleable ui / 16:9 fixed 
#           => fixed using renderer logical size and overscan to eliminate letterboxes
#           => should work fine for most nearly 16:9 aspect ratios; 16:10 hides some ui elements maybe fix later (see below)
#           => handle 4:3 aspect ratios within ios port (will need a proper ui scale handling)
#
#
# (features)
# - Tri-State Button Animation (may be more complex and may be dropped due to that)
# - Game Modes need a intro menu
#       - intro menu may be not game mode specific
#       - intro as popup directly after game mode start
# - more proper balanced game modes
#       - some are noted at whiteboard but need to be evaluated
#       - AND: others are need to be made
#       - ideas:
#           - labyrinth game mode: navigate a symbol until bottom and if success level up else game over...
#           - flappy bird mode: similar to labyrinth but with gates similar to flappy bird
# - Audio-Support
#       - background music: http://tones.wolfram.com/generate/G7sEHQdvMUXcifmtPgsLBKrWKhEG3CvRWfJTIg8ypZgrr54L
#       - on stone 2 board commit sound -> DIY
#       - on row/word clear sound -> DIY
#       - on bomb sound -> DIY
# - animations:
#       - bomb animation
# - multiplayer? coop vs pubg
#       - possible P2P connection via WebRTC
#          https://developer.mozilla.org/en-US/docs/Games/Techniques/WebRTC_data_channels
#       - conceptual sketch:
#           player sets up profile (local) -> app generates a uid and shares with server or gets the uid from server
#           if player wants to play multiplayer it connects with its unique id and the server marks the user as online
#           player is able to search for other players by name
#           if player chose other player -> webrtc channel open
# - supporting story
# - ios support
# - highscore player name entry
#       #ifdef __ANDROID__
#       SDL_StartTextInput();
#       #endif /* __ANDROID__ */
# - bonus points for double / triple / quad / etc.
#       highlight bonus with animation
# - achievements per game mode;
#   for classic:
#       - get two words in a row -> up to 5 words
#       - get 100k points -> up to 1mio
#       - reach level 12
# - game mode handle highscore entry creation
# - score summary at end of game (instead of "wow highscore" and even on lost)
# - container for game mode specific settings like "show tutorial"
# - non-modal animations like score info overlay on word solved during continued gaming
#
#
# (design)
# - Logo Design and Naming
# - get an ui design review
# - ui redesign of player statistics and hint/letter preview
# - flags instead of language names
#
# (architecture bugs)
# - Drawing:
#       - support non 16:9 devices:
#           - issue may be resolved to overscan hidden feature 
#           - decide wether to modify it locally to have it fixed at the top
#               see patch here: https://hg.libsdl.org/SDL/rev/8a29b371e2db
#           - proper solution "sdl"-like would be to render to texture instead of renderer directly
#             with fixed size and then position / background-overscan according to real screen size
#           - for aspect ratios like 4:3 another screen layout may be a solution
#       - add word wrap on text boxes instead of char wrap
#
# (others)
# - android:
#       - (config management) release build for apk incl. signed certificates
#       - (business) eval income model: either ad based vs by app store payment vs freemium
# - version tracking
# - git optimization: store assets somewhere else?
#       - e.g. on the deadlock server within an asset pack and refer within git to a specific sha/version/whatever
#       - remove bmp assets and create script to generate assets from xcf on build 
#           - SDL2_image has xcf reading capabilities
#           - other libs
