def buildAsLibrary = project.hasProperty('BUILD_AS_LIBRARY');
def buildAsApplication = !buildAsLibrary
if (buildAsApplication) {
    apply plugin: 'com.android.application'
}
else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 28
    defaultConfig {
        if (buildAsApplication) {
            applicationId "cc.deadlock.squdoku"
        }
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 3
        versionName "1.0"
        externalNativeBuild {
            ndkBuild {
                arguments "APP_PLATFORM=android-19"
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            }
            // cmake {
            //     arguments "-DANDROID_APP_PLATFORM=android-16", "-DANDROID_STL=c++_static"
            //     // abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
            //     abiFilters 'arm64-v8a'
            // }
        }
    }
    signingConfigs {

       release {
           storeFile file(RELEASE_STORE_FILE)
           storePassword RELEASE_STORE_PASSWORD
           keyAlias RELEASE_KEY_ALIAS
           keyPassword RELEASE_KEY_PASSWORD
       }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "versions"
    productFlavors {
        lite {
            dimension "versions"
            applicationIdSuffix ".lite"
            versionNameSuffix "-lite"
            resValue "string", "app_name", "Enjoy Sudoku"
        }
        pro {
            dimension "versions"
            applicationIdSuffix ".pro"
            versionNameSuffix "-pro"
            resValue "string", "app_name", "Enjoy Sudoku"
            externalNativeBuild {
                ndkBuild {
                    arguments "APP_PLATFORM=android-19"
                    arguments "-j9"
                    abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                    cppFlags "-DWT_PRO_MODE","-O2", "-frtti"
                }
            }
        }
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
        externalNativeBuild {
            ndkBuild {
                path 'jni/Android.mk'
            }
            // cmake {
            //     path 'jni/CMakeLists.txt'
            // }
        }
       
    }
    lintOptions {
        abortOnError false
    }
    
    if (buildAsLibrary) {
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith(".aar")) {
                    def fileName = "cc.deadlock.squaddel.aar";
                    output.outputFile = new File(outputFile.parent, fileName);
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
